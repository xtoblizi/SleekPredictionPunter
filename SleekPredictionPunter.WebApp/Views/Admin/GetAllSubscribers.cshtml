@model SleekPredictionPunter.Model.PaginationModel<Subscriber>
@using Microsoft.AspNetCore.Http
@{
	ViewData["Title"] = "Index";
	Layout = "~/Views/Shared/_AdminLayout.cshtml";
	var sn = 1;
	var pagecount = 50;
	int getPageIndex (int sn , int pagenumber,int count = 50)
	{
		count = pagecount > 0 ? pagecount : count;
		var pagenum = pagenumber - 1 > 0 ? ((pagenumber - 1) * count) + sn : sn;
		return pagenum;
	}
}


<section class="container-fluid" style="padding:10px;">
    <div class="row mt">
        <div class="col-md-12">
            <div class="content-panel" style="padding:20px">
                <div class="row">
                    <div class="col-xl-2 col-lg-2 col-md-3 col-sm-6">
                        <p><h3>List Of Subscribers</h3></p>
                    </div>
                </div>
                <br />
                <div class="table-responsive">
                    <table class="table table-responsive table-bordered">
                        <thead>
                            <tr>
                                <th scope="col">S/N</th>
                                <th scope="col">First Name</th>
                                <th scope="col">Last name</th>
                                <th scope="col">Gender</th>
                                <th scope="col">Email Address</th>
                                <th scope="col">Referral Code</th>
                                <th scope="col">Action</th>
                            </tr>
                        </thead>
                        @if (Model.Paginated().Any())
                        {
                            @foreach (var item in Model.Paginated())
                            {
                                <tbody>
                                    <tr>
                                        <td>
                                            @getPageIndex(sn++, Model.CurrentPage)
                                        </td>
                                        <td>@item.FirstName</td>
                                        <td>@item.LastName</td>
                                        <td>@item.Gender.ToString()</td>
                                        <td>@item.Username</td>
                                        <td>@item.RefererCode</td>
                                        <td>
                                            <button class="btn btn-success btn-xs"><i class="fa fa-check"></i></button>
                                        </td>
                                    </tr>
                                </tbody>
                            }
                        }
                        else
                        {
                            <p style="text-align:center">No records found</p>
                        }
                    </table>
                    <ul class="pagination" style="vertical-align:middle;">
                        @for (int i = 1; i <= Model.PageCount(); i++)
                        {
                            <li class="@(i == Model.CurrentPage ? "page-item active" : "page-item")">
                                <a class="page-link" href="@Url.Action("GetAllSubscribers", new { page = i, count = pagecount })">@i</a>
                            </li>

                        }
                    </ul>
                </div>
            </div>
        </div>
    </div>
</section>