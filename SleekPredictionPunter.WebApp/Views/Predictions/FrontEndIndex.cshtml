@model IEnumerable<SleekPredictionPunter.Model.Prediction>
@inject SleekPredictionPunter.AppService.Clubs.IClubService _clubService
@inject SleekPredictionPunter.AppService.Subscriptions.ISubscriptionAppService _sub

@inject SleekPredictionPunter.AppService.Plans.IPricingPlanAppService _pricingPlanservice
@inject SleekPredictionPunter.AppService.Subscriptions.ISubscriptionAppService _subscriptionSerivce
@inject SleekPredictionPunter.AppService.PredictionAppService.IPredictionService _predictionService

@inject SleekPredictionPunter.WebApp.Controllers.BaseController _base

@{
    ViewData["Title"] = "FrontEndIndex";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int sn = 1;
  
    var plans = await _pricingPlanservice.GetAllPlans();
    var geteFreePlan = plans.FirstOrDefault(c => c.Price < 1);
    Func<Prediction, bool> paidPredicate = null;

    // get to know who is signed in
    var isAdmin = _base.IsAdmin();
    if (isAdmin)
    {
        paidPredicate = (p => p.PricingPlanId != geteFreePlan.Id);
    }
    else
    {
        var useremail = await _base.GetUserName();
        Func<Subcription, bool> subFunc = (s => s.SubscriberUsername == useremail);

        var subscriptions = await _subscriptionSerivce.GetAll(subFunc);
        if (subscriptions != null)
        {
            foreach (var item in subscriptions)
            {
                paidPredicate += (x => x.PricingPlanId == item.PricingPlanId);
            }
        }
    }

    if (paidPredicate != null)
        ViewBag.PaidTips = await _predictionService.GetPredictions(paidPredicate, startIndex: 0, count: 50);

    if (geteFreePlan != null)
    {
        Func<Prediction, bool> freePredicate = (p => p.PricingPlanId == geteFreePlan.Id);

        ViewBag.FreeTips = await _predictionService.GetPredictions(freePredicate, startIndex: 0, count: 50);

    }

    IEnumerable<IGrouping<long, Prediction>> groupedTipsByPredicationCategories = await _predictionService.ReturnRelationalData(paidPredicate, groupByPredicateCategory: true,count: 50);
 
    var groupedTipsByMatchCategories = await _predictionService.ReturnRelationalData(paidPredicate, groupByMatchCategory: true, count: 50);
    var groupedTipsByCustomCategories = await _predictionService.ReturnRelationalData(paidPredicate, groupByCustomCategory: true, count: 50);
    var groupTipsByBetCategory = await _predictionService.ReturnRelationalData(paidPredicate, groupByBetCategory: true, count: 50);

}


<div class="result">

    <div class="container">
        <div class="result-sheet-cover">
            <div class="result-sheet">
                <h4 class="result-title">Free Tips</h4>
                <table class="table">
                    <thead>
                        <tr>
                            <th>S/N</th>
                            <th scope="col"></th>
                            <th scope="col">Date & Time</th>
                            <th scope="col">Match</th>
                            <th scope="col">Tips</th>
                            <th scope="col"></th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (ViewBag.FreeTips != null)
                        {
                            foreach (var prediction in ViewBag.FreeTips)
                            {
                                var getCluALogo = await _clubService.GetByName(prediction.ClubA);
                                var getCluBLogo = await _clubService.GetByName(prediction.ClubB);
                                <tr>
                                    <td>@(sn++)</td>
                                    <th scope="row">
                                        <span class="icon">
                                            <i class="flaticon-football"></i>
                                        </span>
                                    </th>
                                    <td class="date">@prediction.DateCreated</td>
                                    <td class="team-name">
                                        <img src="~/TeamLogo/@(System.IO.Path.GetFileName(getCluALogo.ClubLogRelativePath))" style="width:30px;height:30px" />
                                        @prediction.ClubA <span class="versace">vs</span> @prediction.ClubB <img src="~/TeamLogo/@(System.IO.Path.GetFileName(getCluBLogo.ClubLogRelativePath))" style="width:30px;height:30px" />
                                    </td>
                                    <td class="score">@prediction.PredictionValue</td>
                                    <td>
                                        <a>
                                            <span class="view-icon">
                                                <i class="fas fa-ellipsis-v"></i>
                                            </span>
                                        </a>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <div class="row"></div><br />
    @if (groupedTipsByCustomCategories.Any())
    {
        <div class="container">
            <div class="result-sheet-cover">
                <div class="result-sheet">
                    <h4 class="result-title">Prenuim Tips </h4>
                    <table class="table">
                        <thead>
                            <tr>
                                <th>S/N</th>
                                <th scope="col"></th>
                                <th scope="col">Date & Time</th>
                                <th scope="col">Match</th>
                                <th scope="col">Tips</th>
                                <th scope="col"></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var predictions in groupedTipsByCustomCategories)
                            {
                                foreach (var item in predictions)
                                {
                                    <tr>
                                        <td>@(sn++)</td>
                                        <th scope="row">
                                            <span class="icon">
                                                <i class="flaticon-football"></i>
                                            </span>
                                        </th>
                                        <td class="date">@item.DateCreated</td>
                                        <td class="team-name">
                                            <img src="~/TeamLogo/@(System.IO.Path.GetFileName(item.ClubALogoPath))" style="width:30px;height:30px" />
                                            @item.ClubA <span class="versace">vs</span> @item.ClubB <img src="~/TeamLogo/@(System.IO.Path.GetFileName(item.ClubBLogoPath))" style="width:30px;height:30px" />
                                        </td>
                                        <td class="score">@item.PredictionValue</td>
                                        <td>
                                            <a>
                                                <span class="view-icon">
                                                    <i class="fas fa-ellipsis-v"></i>
                                                </span>
                                            </a>
                                        </td>
                                    </tr>
                                }

                            }

                        </tbody>
                    </table>
                </div>
            </div>
        </div>

       
    }

</div> 